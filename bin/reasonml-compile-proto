#!/bin/bash

# TODO allow the user to specify the output file path

# Ensure some arguments were supplied
if [ 1 = $(( $# < 1 )) ] ; then
  echo 'error: please specify at least one .proto file' > /dev/stderr
  exit 1
fi

# Check if we are in someone's "node_modules/.bin" dir or in our own "bin" dir
if [ "$(basename "$(dirname "$0")")" = ".bin" ] ; then
  MY_PKG_DIR="$(dirname "$(dirname "$0")")/bs-grpc"
else
  MY_PKG_DIR="$(dirname "$(dirname "$0")")"
fi

# Directory that contains our generated protobufs codecs needed for our protoc plugin
MY_SRC_DIR="$MY_PKG_DIR/src"

# The above-mentioned codecs
PROTOC_CODECS_MODULE="$MY_SRC_DIR/protobufs.js"

# Path to grpc-tools module
# TODO is there another way to resolve this path?
SEARCH_DIR="$MY_PKG_DIR"
while : ; do
  if [ "$SEARCH_DIR" = . ] || [ "$SEARCH_DIR" = / ] ; then
    echo "can't find grpc-tools module" 2> /dev/stderr
    exit 1
  fi
  GRPC_TOOLS_DIR="$SEARCH_DIR/node_modules/grpc-tools"
  if [ -d "$GRPC_TOOLS_DIR" ] ; then
    break
  fi
  SEARCH_DIR="$(dirname "$SEARCH_DIR")"
done

# Path to .proto files needed to generate above-mentioned codecs
GOOGLE_PROTOBUF_PROTOS_DIR="$GRPC_TOOLS_DIR/bin/google/protobuf"

# Path to entry point need to generate above-mentioned codecs
PLUGIN_PROTO="$GRPC_TOOLS_DIR/bin/google/protobuf/compiler/plugin.proto"

# Make sure MY_SRC_DIR exists
[ -d "$MY_SRC_DIR" ] || mkdir "$MY_SRC_DIR" || exit 1

# Make sure previously mentioned protobuf codecs exist
[ -a "$PROTOC_CODECS_MODULE/protobufs.js" ] || \
  "$MY_PKG_DIR/node_modules/.bin/pbjs" \
  -t static-module \
  -p "$GOOGLE_PROTOBUF_PROTOS_DIR" \
  $PLUGIN_PROTO \
  > src/protobufs.js

OUTPUT_DIR=${2:="src"}
# Invoke protoc
PATH="$MY_DIR:$PATH" yarn grpc_tools_node_protoc -I. $PROTOC_FLAGS "-I$MY_PKG_DIR" $1 --reasonml_out=$OUTPUT_DIR && bsrefmt --in-place $OUTPUT_DIR/Grpc.re
